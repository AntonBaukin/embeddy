<queries dialect = "PostgreSQL">

  <query id = "exists-type-multi">

    select 1 from Objects where (pkey = cast(? as uuid))
      and type in (select * from unnest(string_to_array(?, ' ')))

  </query>

  <query id = "guess-type+prefix">

    select cast(pkey as char(36)) from Objects where
      (type = ?) and (cast(pkey as char(36)) like ? || '%')
    limit 2

  </query>

  <query id = "json-multi">

    select json from Objects where (pkey = cast(? as uuid))
      and type in (select * from unnest(string_to_array(?, ' ')))

  </query>

  <query id = "load">

    select cast(pkey as char(36)), cast(owner as char(36)),
      ts, type, text, json from Objects
    where ((pkey = cast(? as uuid))) and (type = ?)

  </query>

  <query id = "load-multi">

    select cast(pkey as char(36)), cast(owner as char(36)),
      ts, type, text, json from Objects
    where ((pkey = cast(? as uuid))) and type in
      (select * from unnest(string_to_array(?, ' ')))

  </query>

  <query id = "each-type">

    select cast(pkey as char(36)), cast(owner as char(36)),
      ts, type, text, json from Objects
    where (type = ?) order by ts

  </query>

  <query id = "each-type+text">

    select cast(pkey as char(36)), cast(owner as char(36)),
      ts, type, text, json from Objects
    where (type = ?) and (text = ?) order by ts

  </query>

  <query id = "each-owner+type">

    select cast(pkey as char(36)), cast(owner as char(36)),
      ts, type, text, json from Objects
    where ((owner = cast(? as uuid))) and (type = ?) order by ts

  </query>

  <query id = "load-file-multi">

    select file from Objects where ((pkey = cast(? as uuid))) and
      type in (select * from unnest(string_to_array(?, ' ')))

  </query>
</queries>